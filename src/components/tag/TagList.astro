---
interface Props {
  tags: [string, number][];
}

const { tags } = Astro.props;
---

<ul class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3" role="list" id="tagList">
  {
    tags.map(([tag, count]) => (
      <li>
        <a
          href={`/tags/${tag}`}
          class="flex items-center justify-between p-4 rounded-lg bg-gray-50 hover:bg-gray-100"
          aria-label={`Ver ${count} ${count === 1 ? "post" : "posts"} com a tag ${tag}`}
        >
          <span class="text-gray-900">{tag}</span>
          <span class="text-sm text-gray-500">
            {count} {count === 1 ? "post" : "posts"}
          </span>
        </a>
      </li>
    ))
  }
</ul>

<script>
  // Simple client-side filtering
  const input = document.getElementById("tagFilter") as HTMLInputElement;
  const list = document.getElementById("tagList");

  if (input && list) {
    input.addEventListener("input", () => {
      const filter = input.value.toLowerCase();
      const items = list.getElementsByTagName("li");

      for (const item of items) {
        const text = item.textContent?.toLowerCase() || "";
        item.style.display = text.includes(filter) ? "" : "none";
      }
    });
  }
</script>
